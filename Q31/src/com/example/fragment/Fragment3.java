package com.example.fragment;import java.text.DateFormat;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.List;import org.apache.http.NameValuePair;import org.apache.http.message.BasicNameValuePair;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.text.Spannable;import android.text.SpannableStringBuilder;import android.text.style.ForegroundColorSpan;import android.util.Log;import android.view.Gravity;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.View.OnKeyListener;import android.view.View.OnTouchListener;import android.view.ViewGroup.LayoutParams;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.ListView;import android.widget.PopupWindow;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import com.example.q31.R;import com.example.view.MyListView;import com.lidroid.xutils.HttpUtils;import com.lidroid.xutils.exception.HttpException;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.http.ResponseInfo;import com.lidroid.xutils.http.callback.RequestCallBack;import com.lidroid.xutils.http.client.HttpRequest;import com.nostra13.universalimageloader.core.ImageLoader;public class Fragment3 extends Fragment{	protected ImageLoader imageLoader = ImageLoader.getInstance();	private View parentView;	private ProgressBar mPb1;	private ListView mLv1;	   private List<Data1> mlist =new ArrayList<Fragment3.Data1>();	private ForegroundColorSpan redSpan;	private TextView mTv9;	private Button mBt1;	private int mPosition=0;	@Override	@Nullable	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment3, container, false);				mPb1 =(ProgressBar)parentView.findViewById(R.id.mPb1);		mPb1.setVisibility(View.GONE);		 redSpan = new ForegroundColorSpan(R.color.blue);  		mLv1 =(ListView)parentView.findViewById(R.id.mLv1);		mLv1.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				mPosition =position;				ShowWindow();			}		});		initData();								return parentView;	}			private View layout;	private Button mBtSure;	private Button mBtCancel;	private PopupWindow mPop;	private ImageView mIv1;	private EditText mTv3;		public void ShowWindow(){		LayoutInflater mLayoutInflater = (LayoutInflater) getActivity().getSystemService(getActivity().LAYOUT_INFLATER_SERVICE);		 layout = mLayoutInflater.inflate(R.layout.pop1, null);		 mEee2 =(EditText)layout.findViewById(R.id.mTv1);		 mEee1 =(EditText)layout.findViewById(R.id.mTv4);		 mEee3 =(EditText)layout.findViewById(R.id.mTv2);		 mTv3 =(EditText)layout.findViewById(R.id.mTv3);		 mEee2.setText(mlist.get(mPosition).mTv1);		 mEee3.setText(mlist.get(mPosition).mTv2);		 mTv3.setText(mlist.get(mPosition).mTv3);		 mEee1.setText(mlist.get(mPosition).mTv4);		 mBtSure =(Button)layout.findViewById(R.id.mBtSure);		 mBtSure.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {			//	startActivity( new Intent(Intent.ACTION_CALL,Uri.parse("tel:"+"10086")));				initData1(mEee1.getEditableText().toString(),mEee2.getEditableText().toString(),mEee3.getEditableText().toString(),mTv3.getEditableText().toString());			}		});		 mBtCancel =(Button)layout.findViewById(R.id.mBtCancel);		 mBtCancel.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {             	mPop.dismiss();				mPop = null;			}		});		 mIv1 =(ImageView)layout.findViewById(R.id.mIv1);		 mIv1.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				mPop.dismiss();				mPop = null;			}		});		 mPop = new PopupWindow(layout,LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);		 mPop.setFocusable(true);		 mPop.setOutsideTouchable(true);				 mPop.update();		//位置在R.id.button的正下方		 //mPop.showAsDropDown(findViewById(R.id.mTvfjc1), 15,8);		 mPop.showAtLocation(getActivity().findViewById(R.id.mRlcg1), Gravity.CENTER, 0, 0);			layout.setOnKeyListener(new OnKeyListener() {				@Override				public boolean onKey(View v, int keyCode, KeyEvent event) {					switch (keyCode) {					case KeyEvent.KEYCODE_BACK:						if (mPop != null && mPop.isShowing()) {			             	mPop.dismiss();							mPop = null;							return false;						}						break;					default:						break;					}					return false;				}			});/*			layout.setOnTouchListener(new OnTouchListener() {				@Override				public boolean onTouch(View v, MotionEvent event) {					 if (mPop != null && mPop.isShowing()) {				      mPop.dismiss();					  mPop = null; }					 return true;				}			});*/		 	}	private void initData() {	downsearchdata("0");}public void downsearchdata(String ss){	mPb1.setVisibility(View.VISIBLE);	 RequestParams params = new RequestParams();   List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);   nameValuePairs.add(new BasicNameValuePair("userid", 1+""));   params.addBodyParameter(nameValuePairs);   HttpUtils http = new HttpUtils();   http.send(HttpRequest.HttpMethod.POST,  		 "http://pine.i3.com.hk/q3/json/yhmenulist.php",           params,           new RequestCallBack<String>() {				private String msg;				private Myadapter adapter;				@Override				public void onFailure(HttpException arg0, String arg1) {									}				@Override				public void onSuccess(ResponseInfo<String> arg0) {					JSONObject jsonObject;					try {						jsonObject = new JSONObject(arg0.result);						String string_code = jsonObject.getString("code");						 msg = jsonObject.getString("msg");												 int  num_code=Integer.valueOf(string_code);						 if (num_code==1) {							 //保存到本地							 mlist.clear();							 JSONArray array = jsonObject.getJSONArray("data");							 for(int i=0;i<array.length();i++){								 Data1 d1 =new Data1();								 d1.mTv1=array.getJSONObject(i).getString("name");								 d1.mTv2=array.getJSONObject(i).getString("price");								 d1.mTv3=array.getJSONObject(i).getString("time");								 d1.mTv4=array.getJSONObject(i).getString("number");								 d1.mTv5=array.getJSONObject(i).getString("number");								 mlist.add(d1);							 }							 mPb1.setVisibility(View.GONE);                            initd1a();						 }						 else {									mPb1.setVisibility(View.GONE);						}					} catch (JSONException e) {						mPb1.setVisibility(View.GONE);					}				}				private void initd1a() {						adapter =new Myadapter();					mLv1.setAdapter(adapter);}        });}class Data1 {	public String mTv1;	public String mTv2;	public String mTv3;	public String mTv4;	public String mTv5;		}	class Holder{		TextView mTv1,mTv2,mTv3,mTv4,mTv5;		ImageView mIv2,mIv3,mIv1;		Button mBtn2,mBtn1;	}	class  Myadapter extends   BaseAdapter{		@Override		public View getView(final int position, View convertView, ViewGroup parent) {			        						Holder holder = null;			if(convertView==null){				convertView = LayoutInflater.from(getActivity())						.inflate(R.layout.item_listview_4, null);				holder = new Holder();								holder.mTv1 =(TextView)convertView.findViewById(R.id.mTv1);				holder.mTv2 =(TextView)convertView.findViewById(R.id.mTv2);				holder.mTv3 =(TextView)convertView.findViewById(R.id.mTv3);			//	holder.mTv4 =(TextView)convertView.findViewById(R.id.mTv4);				holder.mTv5 =(TextView)convertView.findViewById(R.id.mTv5);				holder.mBtn1 =(Button)convertView.findViewById(R.id.mBtn1);				holder.mBtn2 =(Button)convertView.findViewById(R.id.mBtn2);				convertView.setTag(holder);			}else{				holder =(Holder)convertView.getTag();			}		final TextView mTv5 = (TextView)convertView.findViewById(R.id.mTv5);		final Button mBtn1 = (Button)convertView.findViewById(R.id.mBtn1);			holder.mTv1.setText(mlist.get(position).mTv1);			holder.mTv3.setText(mlist.get(position).mTv3+"分钟");			//holder.mTv4.setText("共:"+mlist.get(position).mTv3+"份");			SpannableStringBuilder builder = new SpannableStringBuilder("HK$"+mlist.get(position).mTv2+"/份");  			if(mlist.get(position).mTv2.length()>0){			builder.setSpan(redSpan,3, 3+mlist.get(position).mTv2.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);  			}			holder.mTv2.setText(builder);            if(mlist.get(position).mTv5.equals("0")){            	holder.mBtn1.setVisibility(View.GONE);            	holder.mTv5.setVisibility(View.GONE);            }else{            	holder.mBtn1.setVisibility(View.VISIBLE);            	holder.mTv5.setVisibility(View.VISIBLE);            }                       mTv5.setText(mlist.get(position).mTv5);                                    holder.mBtn1.setOnClickListener(new OnClickListener() {								@Override				public void onClick(View v) {					 if(mlist.get(position).mTv5.equals("0")){							mlist.get(position).mTv5=(Integer.valueOf(mlist.get(position).mTv5)-1)+"";			            	mBtn1.setVisibility(View.GONE);			            	mTv5.setVisibility(View.GONE);			            	dowhat();			            }else{			            	if(mlist.get(position).mTv5.equals("1")){							mlist.get(position).mTv5=(Integer.valueOf(mlist.get(position).mTv5)-1)+"";			            	mBtn1.setVisibility(View.GONE);			            	mTv5.setVisibility(View.GONE);			                mTv5.setText(mlist.get(position).mTv5);			            	dowhat();			            }else {							mlist.get(position).mTv5=(Integer.valueOf(mlist.get(position).mTv5)-1)+"";			            	mBtn1.setVisibility(View.VISIBLE);			            	mTv5.setVisibility(View.VISIBLE);			                mTv5.setText(mlist.get(position).mTv5);			            	dowhat();			            }			            }					 				}			});			            holder.mBtn2.setOnClickListener(new OnClickListener() {								@Override				public void onClick(View v) {					if(Integer.valueOf(mlist.get(position).mTv5)<Integer.valueOf(mlist.get(position).mTv4)){					mlist.get(position).mTv5=(Integer.valueOf(mlist.get(position).mTv5)+1)+"";			            	mBtn1.setVisibility(View.VISIBLE);			            	mTv5.setVisibility(View.VISIBLE);			                mTv5.setText(mlist.get(position).mTv5);			            	dowhat();				}				}			});						return convertView;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return mlist.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}	}	public void dowhat(){/*		int total =0;		for (int i = 0; i < mlist.size(); i++) {			total =total+	Integer.valueOf(mlist.get(i).mTv5)*Integer.valueOf(mlist.get(i).mTv2);		}		mTv9.setText(total+"");	*/}								private EditText mEee1;private EditText mEee2;private EditText mEee3;private void initData1(String str,String str1,String str2,String str3) {	downsearchdata1(str,str1,str2,str3);}public void downsearchdata1(String str,String str1,String str2,String str3){	mPb1.setVisibility(View.VISIBLE);	 RequestParams params = new RequestParams();   List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);   nameValuePairs.add(new BasicNameValuePair("id", 1+""));   nameValuePairs.add(new BasicNameValuePair("number",str));   nameValuePairs.add(new BasicNameValuePair("name",str1));   nameValuePairs.add(new BasicNameValuePair("price",str2));   nameValuePairs.add(new BasicNameValuePair("time", str3));      params.addBodyParameter(nameValuePairs);   HttpUtils http = new HttpUtils();   http.send(HttpRequest.HttpMethod.POST,  		 "http://pine.i3.com.hk/q3/json/sjmenuedit.php",           params,           new RequestCallBack<String>() {				private String msg;				private Myadapter adapter;				@Override				public void onFailure(HttpException arg0, String arg1) {									}				@Override				public void onSuccess(ResponseInfo<String> arg0) {					JSONObject jsonObject;					try {												jsonObject = new JSONObject(arg0.result);						String string_code = jsonObject.getString("code");						 msg = jsonObject.getString("msg");						Log.e("F3", arg0.result);						 int  num_code=Integer.valueOf(string_code);						 if (num_code==1) {							 mPb1.setVisibility(View.GONE);							 Toast.makeText(getActivity(), msg, 0).show();								if (mPop != null && mPop.isShowing()) {					             	mPop.dismiss();									mPop = null;								}								initData();						 }						 else {									mPb1.setVisibility(View.GONE);						}					} catch (JSONException e) {						mPb1.setVisibility(View.GONE);					}				}				private void initd1a() {						adapter =new Myadapter();					mLv1.setAdapter(adapter);}        });}}