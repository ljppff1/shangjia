package com.example.fragment;import java.util.ArrayList;import java.util.List;import org.apache.http.NameValuePair;import org.apache.http.message.BasicNameValuePair;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.graphics.Bitmap;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.text.Spannable;import android.text.SpannableStringBuilder;import android.text.style.ForegroundColorSpan;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.ListView;import android.widget.ProgressBar;import android.widget.TextView;import com.example.q31.R;import com.example.utils.Content;import com.lidroid.xutils.HttpUtils;import com.lidroid.xutils.exception.HttpException;import com.lidroid.xutils.http.RequestParams;import com.lidroid.xutils.http.ResponseInfo;import com.lidroid.xutils.http.callback.RequestCallBack;import com.lidroid.xutils.http.client.HttpRequest;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;public class Fragment51 extends Fragment{	protected ImageLoader imageLoader = ImageLoader.getInstance();	private View parentView;	private ListView mLv1;	private ProgressBar mPb1;	   private List<Data1> mlist =new ArrayList<Fragment51.Data1>();	   private Myadapter adapter;	private String Latitude;	private String Longitude;	private DisplayImageOptions options;	private ForegroundColorSpan redSpan;	public static Fragment51 newInstance(int position) {		Fragment51 fragment = new Fragment51();        Bundle bundle = new Bundle();        bundle.putInt("position", position);        fragment.setArguments(bundle);        return fragment;    }	@Override	@Nullable	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		parentView = inflater.inflate(R.layout.fragment51, container, false);				mLv1 =(ListView) parentView.findViewById(R.id.mLv1);		mPb1 =(ProgressBar)parentView.findViewById(R.id.mPb1);		mPb1.setVisibility(View.GONE);		 redSpan = new ForegroundColorSpan(R.color.www2);  		mLv1.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {       //  startActivity(new Intent(getActivity(), CanGuang.class));			}		});		initData();						return parentView;					}	private void initData() {	downsearchdata("0");}public int aaa=-1;public void downsearchdata(String ss){	mPb1.setVisibility(View.VISIBLE);	 RequestParams params = new RequestParams();   List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(10);   nameValuePairs.add(new BasicNameValuePair("type", 4+""));   nameValuePairs.add(new BasicNameValuePair("UserID", 1+""));   params.addBodyParameter(nameValuePairs);   HttpUtils http = new HttpUtils();   http.send(HttpRequest.HttpMethod.POST,  		 "http://pine.i3.com.hk/q3/json/sjorderlist.php",           params,           new RequestCallBack<String>() {				private String msg;				@Override				public void onFailure(HttpException arg0, String arg1) {									}				@Override				public void onSuccess(ResponseInfo<String> arg0) {					JSONObject jsonObject;					try {						jsonObject = new JSONObject(arg0.result);						String string_code = jsonObject.getString("code");						 msg = jsonObject.getString("msg");												 int  num_code=Integer.valueOf(string_code);						 if (num_code==1) {							 //保存到本地							 mlist.clear();							 JSONArray array = jsonObject.getJSONArray("data");							 for(int i=0;i<array.length();i++){								 if(i==0){								 Data1 d1 =new Data1();								 d1.id=array.getJSONObject(i).getString("id");								 d1.address=array.getJSONObject(i).getString("address");								 d1.waitime=array.getJSONObject(i).getString("waitime");								 d1.way=array.getJSONObject(i).getString("way");								 d1.food=array.getJSONObject(i).getString("food");								 d1.zongji=array.getJSONObject(i).getString("zongjia");								 d1.num=array.getJSONObject(i).getString("num");								 d1.type=array.getJSONObject(i).getString("type");								 d1.food1="";								 d1.food2="";								 aaa=aaa+1;								 mlist.add(d1);								 }else if(i==1){									 mlist.get(aaa).food1=		array.getJSONObject(i).getString("food");								 }else if(i==2){									 mlist.get(aaa).food2=		array.getJSONObject(i).getString("food");								 }															 }							 mPb1.setVisibility(View.GONE);                            initd1a();						 }						 else {									mPb1.setVisibility(View.GONE);						}					} catch (JSONException e) {						mPb1.setVisibility(View.GONE);					}				}        });}				private void initd1a() {		adapter =new Myadapter();	mLv1.setAdapter(adapter);}class Data1 {	public String id;	public String address;	public String waitime;	public String way;	public String food;	public String zongji;	public String num;	public String type;	public String food1;	public String food2;			}	class Holder{		TextView mTv3,mTv4,mTv5,mTv6,mTv7,mTv1,mTv2;		ImageView mIv2,mIv3,mIv1;	}	class  Myadapter extends   BaseAdapter{		@Override		public View getView(int position, View convertView, ViewGroup parent) {			        						Holder holder = null;			if(convertView==null){				convertView = LayoutInflater.from(getActivity())						.inflate(R.layout.item_listview_1, null);				holder = new Holder();								holder.mIv1 =(ImageView)convertView.findViewById(R.id.mIv1);				holder.mTv1 =(TextView)convertView.findViewById(R.id.mTv1);				holder.mTv2 =(TextView)convertView.findViewById(R.id.mTv2);				holder.mTv3 =(TextView)convertView.findViewById(R.id.mTv3);				holder.mTv4 =(TextView)convertView.findViewById(R.id.mTv4);				holder.mTv5 =(TextView)convertView.findViewById(R.id.mTv5);				holder.mTv6 =(TextView)convertView.findViewById(R.id.mTv6);				holder.mTv7 =(TextView)convertView.findViewById(R.id.mTv7);								convertView.setTag(holder);			}else{				holder =(Holder)convertView.getTag();			}						SpannableStringBuilder builder = new SpannableStringBuilder("ORDER#HK$"+mlist.get(position).zongji);  			builder.setSpan(redSpan,6, 9+mlist.get(position).zongji.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);  						holder.mTv1.setText(builder);			if(mlist.get(position).way.equals("1")){				holder.mTv2.setText(R.string.c8);			}			if(mlist.get(position).way.equals("2")){				holder.mTv2.setText(R.string.c9);			}						holder.mTv4.setText(mlist.get(position).waitime);			holder.mTv6.setText(mlist.get(position).address);			holder.mTv3.setText(mlist.get(position).food);			holder.mTv5.setText(mlist.get(position).food1);			holder.mTv6.setText(mlist.get(position).food2);					/*										holder.mIv1.setText(mlist.get(position).ChannelID);			holder.mTv6.setText(mlist.get(position).UserNo);									public String id;			public String address;			public String waitime;			public String way;			public String food;			public String zongji;			public String num;			public String type;*/						return convertView;		}		@Override		public int getCount() {			// TODO Auto-generated method stub			return mlist.size();		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}	}	private void initImageLoaderOptions() {		options = new DisplayImageOptions.Builder()				.showImageForEmptyUri(R.drawable.aaa)				.cacheInMemory()				.cacheOnDisc().displayer(new FadeInBitmapDisplayer(2000))				.bitmapConfig(Bitmap.Config.RGB_565).build();	}}